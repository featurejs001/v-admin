import{L as R,M as u}from"./index-DgoLVYM5.js";function k(h){try{const t=new TextEncoder,n=new TextDecoder("utf-8",{fatal:!0}),w=t.encode(h);return n.decode(w),!0}catch{return!1}}async function S(h,t){try{const{read:n,utils:w}=await R(async()=>{const{read:e,utils:r}=await import("./xlsx-BnRkYbvF.js");return{read:e,utils:r}},[]),E=await new Promise((e,r)=>{const s=new FileReader;s.onload=o=>{o.target?e(o.target.result):r(new Error("读取文件失败"))},s.onerror=o=>r(o),s.readAsArrayBuffer(h)}),y=n(E,{type:"array"}),x=y.SheetNames[0],$=y.Sheets[x],f=w.sheet_to_json($,{header:1});if(!f||f.length===0)return u.error({title:"预处理失败",content:"文件内容为空"}),{success:!1,errorMessage:"文件内容为空"};const l=f[0];if(l.length!==t.expectedHeaders.length)return u.error({title:"模板错误",content:`表头列数不匹配，期望 ${t.expectedHeaders.length} 列，实际 ${l.length} 列`}),{success:!1,errorMessage:`表头列数不匹配，期望 ${t.expectedHeaders.length} 列，实际 ${l.length} 列`};for(let e=0;e<t.expectedHeaders.length;e++)if(l[e]!==t.expectedHeaders[e])return u.error({title:"模板错误",content:`表头第 ${e+1} 列不匹配，期望 "${t.expectedHeaders[e]}"，实际 "${l[e]}"`}),{success:!1,errorMessage:`表头第 ${e+1} 列不匹配，期望 "${t.expectedHeaders[e]}"，实际 "${l[e]}"`};const a=f.slice(1),g=[],{keyColumnIndex:c}=t;let d=-1;if(t.ignoreEmptyTrailingRows)for(let e=a.length-1;e>=0;e--){const r=a[e];if(r.length>c&&r[c]!==void 0&&r[c]!==null&&String(r[c]).trim()!==""){d=e;break}}const i=[];if(a.forEach((e,r)=>{if(e.length<=c){i.push(r+2);return}const s=e[c];(s==null||String(s).trim()==="")&&i.push(r+2)}),i.length>0&&t.ignoreEmptyTrailingRows){const e=i.filter(r=>r-2<=d);e.length>0?g.push({type:"关键列为空",rows:e}):console.log("忽略尾部空行:",i)}else i.length>0&&g.push({type:"关键列为空",rows:i});if(t.checkUtf8Encoding){const e=[];a.forEach((r,s)=>{for(let o=0;o<r.length;o++){const m=r[o];if(typeof m=="string"&&!k(m)){e.push(s+2);break}}}),e.length>0&&g.push({type:"非UTF-8编码",rows:e})}if(g.length>0){const r=g.map(s=>`${s.type}：第 ${s.rows.join("、")} 行`).join(`
`);return u.error({title:"数据错误",content:r+`
请先修改再导入`}),{success:!1,errorMessage:r}}let p=a;if(t.ignoreEmptyTrailingRows){d=-1;for(let e=a.length-1;e>=0;e--){const r=a[e];if(r.length>c&&r[c]!==void 0&&r[c]!==null&&String(r[c]).trim()!==""){d=e;break}}d>=0?p=a.slice(0,d+1):p=[]}return{success:!0,data:p.map(e=>{const r={};return l.forEach((s,o)=>{r[s]=o<e.length?e[o]:null}),r}),rawData:f}}catch(n){return console.error("解析Excel文件失败:",n),u.error({title:"预处理失败",content:`解析Excel文件失败: ${n instanceof Error?n.message:String(n)}`}),{success:!1,errorMessage:`解析Excel文件失败: ${n instanceof Error?n.message:String(n)}`}}}export{S as preProcessExcelFile};
